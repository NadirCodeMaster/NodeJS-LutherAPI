swagger: '2.0'
info:
  version: '0.0.1'
  title: Luther API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      For accessing the API a valid JWT token must be passed in all the queries in
      the 'Authorization' header.


      A valid JWT token is generated by the API and retourned as answer of a call
      to the route /signin giving a valid user & password.


      The following syntax must be used in the 'Authorization' header :

        xxxxxx.yyyyyyy.zzzzzz
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /user:
    x-swagger-router-controller: user
    get:
      description: Get User By Email
      tags:
        - user
      operationId: getUser
      parameters:
        - name: email
          in: query
          description: user's email
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
    put:
      description: Update User
      tags:
        - user
      operationId: updateUser
      parameters:
        - name: id
          in: query
          description: user's id
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
              roles:
                type: array
                items:
                  type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '409':
          description: 'Email Already Registered'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Add New User
      tags:
        - user
      operationId: signup
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
              roles:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '409':
          description: 'Email Already Registered'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Delete User
      tags:
        - user
      operationId: deleteUser
      parameters:
        - name: id
          in: query
          description: user's id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/activate:
    x-swagger-router-controller: user
    put:
      description: Activate User
      tags:
        - user
      operationId: activate
      parameters:
        - name: id
          in: query
          description: user's id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '409':
          description: 'Invalid id'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/deactivate:
    x-swagger-router-controller: user
    put:
      description: Deactivate User
      tags:
        - user
      operationId: deactivate
      parameters:
        - name: id
          in: query
          description: user's id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '409':
          description: 'Invalid id'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/invite:
    x-swagger-router-controller: user
    post:
      description: Invite User
      tags:
        - user
      operationId: inviteUser
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
              roles:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserResponse'
        '409':
          description: 'Email Already Registered'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/signin:
    x-swagger-router-controller: user
    post:
      description: Signin
      tags:
        - user
      operationId: signin
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: 'UnAuthorized'
          schema:
            $ref: '#/definitions/Error'
  /user/list:
    x-swagger-router-controller: user
    get:
      description: List users
      tags:
        - user
      operationId: listUsers
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UsersResponse'
  /forecasting:
    x-swagger-router-controller: forecasting
    get:
      description: Get Forecasting By id
      tags:
        - forecasting
      operationId: get
      parameters:
        - name: id
          in: query
          description: forecasting id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingResponse'
    post:
      description: Add Forecasting
      tags:
        - forecasting
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              make:
                type: string
              model:
                type: string
              year:
                type: number
              trim:
                type: string
              demand_category:
                type: string
              mileage_category:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingResponse'
    put:
      description: Update Forecasting
      tags:
        - forecasting
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              make:
                type: string
              model:
                type: string
              year:
                type: number
              trim:
                type: string
              demand_category:
                type: string
              mileage_category:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingResponse'
    delete:
      description: Delete Forecasting
      tags:
        - forecasting
      operationId: remove
      parameters:
        - name: id
          in: query
          description: forecasting id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /forecasting/list:
    x-swagger-router-controller: forecasting
    get:
      description: List Forecastings
      tags:
        - forecasting
      operationId: list
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingsResponse'
  /inventory:
    x-swagger-router-controller: inventory
    get:
      description: Get Inventory By id
      tags:
        - inventory
      operationId: get
      parameters:
        - name: id
          in: query
          description: inventory id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryResponse'
    post:
      description: Add Inventory
      tags:
        - inventory
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              lot_id:
                type: string
              make:
                type: string
              model:
                type: string
              year:
                type: number
              color:
                type: string
              trim:
                type: string
              miles:
                type: string
              condition:
                type: string
              picture:
                type: string
              description:
                type: string
              price:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryResponse'
    put:
      description: Update Inventory
      tags:
        - inventory
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              lot_id:
                type: string
              make:
                type: string
              model:
                type: string
              year:
                type: number
              color:
                type: string
              trim:
                type: string
              miles:
                type: string
              condition:
                type: string
              picture:
                type: string
              description:
                type: string
              price:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryResponse'
    delete:
      description: Delete Inventory
      tags:
        - inventory
      operationId: remove
      parameters:
        - name: id
          in: query
          description: inventory id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoryResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /inventory/list:
    x-swagger-router-controller: inventory
    get:
      description: List Inventories
      tags:
        - inventory
      operationId: list
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InventoriesResponse'
  /lot:
    x-swagger-router-controller: lot
    get:
      description: Get Lot By id
      tags:
        - lot
      operationId: get
      parameters:
        - name: id
          in: query
          description: lot id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LotResponse'
    post:
      description: Add Lot
      tags:
        - lot
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              name:
                type: string
              address1:
                type: string
              address2:
                type: string
              city:
                type: string
              state:
                type: string
              postal_code:
                type: string
              country:
                type: string
              latitude:
                type: number
              longitude:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LotResponse'
    put:
      description: Update Lot
      tags:
        - lot
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              name:
                type: string
              address1:
                type: string
              address2:
                type: string
              city:
                type: string
              state:
                type: string
              postal_code:
                type: string
              country:
                type: string
              latitude:
                type: number
              longitude:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LotResponse'
    delete:
      description: Delete Lot
      tags:
        - lot
      operationId: remove
      parameters:
        - name: id
          in: query
          description: lot id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LotResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /lot/list:
    x-swagger-router-controller: lot
    get:
      description: List Lots
      tags:
        - lot
      operationId: list
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LotsResponse'
  /transaction:
    x-swagger-router-controller: transaction
    get:
      description: Get Transaction By id
      tags:
        - transaction
      operationId: get
      parameters:
        - name: id
          in: query
          description: transaction id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionResponse'
    post:
      description: Add Transaction
      tags:
        - transaction
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              price:
                type: number
              date_sold:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionResponse'
    put:
      description: Update Transaction
      tags:
        - transaction
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              price:
                type: number
              date_sold:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionResponse'
    delete:
      description: Delete Transaction
      tags:
        - transaction
      operationId: remove
      parameters:
        - name: id
          in: query
          description: transaction id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /transaction/list:
    x-swagger-router-controller: transaction
    get:
      description: List Transactions
      tags:
        - transaction
      operationId: list
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionsResponse'
  /unload:
    x-swagger-router-controller: unload
    get:
      description: Get Unload By id
      tags:
        - unload
      operationId: get
      parameters:
        - name: id
          in: query
          description: unload id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnloadResponse'
    post:
      description: Add Unload
      tags:
        - unload
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              est_losss_today:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnloadResponse'
    put:
      description: Update Unload
      tags:
        - unload
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              est_losss_today:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnloadResponse'
    delete:
      description: Delete Unload
      tags:
        - unload
      operationId: remove
      parameters:
        - name: id
          in: query
          description: unload id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnloadResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /unload/list:
    x-swagger-router-controller: unload
    get:
      description: List Unloads
      tags:
        - unload
      operationId: list
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnloadsResponse'
  /forecastingprojection:
    x-swagger-router-controller: forecastingProjection
    get:
      description: Get Forecasting Projection By id
      tags:
        - forecasting projection
      operationId: get
      parameters:
        - name: id
          in: query
          description: forecastingProjection id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingProjectionResponse'
    post:
      description: Add ForecastingProjection
      tags:
        - forecasting projection
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              forecasting_id:
                type: string
              date:
                type: string
              est_no_solds:
                type: number
              est_avg_sell_price:
                type: number
              est_avg_cost_price:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingProjectionResponse'
    put:
      description: Update ForecastingProjection
      tags:
        - forecasting projection
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              forecasting_id:
                type: string
              date:
                type: string
              est_no_solds:
                type: number
              est_avg_sell_price:
                type: number
              est_avg_cost_price:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingProjectionResponse'
    delete:
      description: Delete ForecastingProjection
      tags:
        - forecasting projection
      operationId: remove
      parameters:
        - name: id
          in: query
          description: forecastingProjection id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingProjectionResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /forecastingprojection/list:
    x-swagger-router-controller: forecastingProjection
    get:
      description: List ForecastingProjections
      tags:
        - forecasting projection
      operationId: list
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastingProjectionsResponse'
  /move:
    x-swagger-router-controller: move
    get:
      description: Get Move By id
      tags:
        - move
      operationId: get
      parameters:
        - name: id
          in: query
          description: move id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MoveResponse'
    post:
      description: Add Move
      tags:
        - move
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              lot_from_id:
                type: string
              lot_to_id:
                type: string
              lot_to_est_price:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MoveResponse'
    put:
      description: Update Move
      tags:
        - move
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              lot_from_id:
                type: string
              lot_to_id:
                type: string
              lot_to_est_price:
                type: number
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MoveResponse'
    delete:
      description: Delete Move
      tags:
        - move
      operationId: remove
      parameters:
        - name: id
          in: query
          description: move id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MoveResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /move/list:
    x-swagger-router-controller: move
    get:
      description: List Moves
      tags:
        - move
      operationId: list
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MovesResponse'
  /soldprojection:
    x-swagger-router-controller: soldProjection
    get:
      description: Get SoldProjection By id
      tags:
        - sold projection
      operationId: get
      parameters:
        - name: id
          in: query
          description: sold projection id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SoldProjectionResponse'
    post:
      description: Add Sold Projection
      tags:
        - sold projection
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              lot_id:
                type: string
              estimated_sell_date:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SoldProjectionResponse'
    put:
      description: Update SoldProjection
      tags:
        - sold projection
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              lot_id:
                type: string
              estimated_sell_date:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SoldProjectionResponse'
    delete:
      description: Delete Sold Projection
      tags:
        - sold projection
      operationId: remove
      parameters:
        - name: id
          in: query
          description: sold projection id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SoldProjectionResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /soldprojection/list:
    x-swagger-router-controller: soldProjection
    get:
      description: List SoldProjections
      tags:
        - sold projection
      operationId: list
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SoldProjectionsResponse'
  /valueprojection:
    x-swagger-router-controller: valueProjection
    get:
      description: Get ValueProjection By Id
      tags:
        - value projection
      operationId: get
      parameters:
        - name: id
          in: query
          description: value projection id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValueProjectionResponse'
    post:
      description: Add Value Projection
      tags:
        - value projection
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              lot_id:
                type: string
              date:
                type: string
              estimate:
                type: string
              error:
                type: string
              version:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValueProjectionResponse'
    put:
      description: Update ValueProjection
      tags:
        - value projection
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              inventory_id:
                type: string
              lot_id:
                type: string
              date:
                type: string
              estimate:
                type: string
              error:
                type: string
              version:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValueProjectionResponse'
    delete:
      description: Delete Value Projection
      tags:
        - value projection
      operationId: remove
      parameters:
        - name: id
          in: query
          description: value projection id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValueProjectionResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /valueprojection/list:
    x-swagger-router-controller: valueProjection
    get:
      description: List ValueProjections
      tags:
        - value projection
      operationId: list
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValueProjectionsResponse'
  /auction:
    x-swagger-router-controller: auction
    get:
      description: Get Auction By id
      tags:
        - auction
      operationId: get
      parameters:
        - name: id
          in: query
          description: auction id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuctionResponse'
    post:
      description: Add Auction
      tags:
        - auction
      operationId: add
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              make:
                type: string
              model:
                type: string
              year:
                type: number
              trim:
                type: string
              demand_category:
                type: string
              mileage_category:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuctionResponse'
    put:
      description: Update Auction
      tags:
        - auction
      operationId: update
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              make:
                type: string
              model:
                type: string
              year:
                type: number
              trim:
                type: string
              demand_category:
                type: string
              mileage_category:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuctionResponse'
    delete:
      description: Delete Auction
      tags:
        - auction
      operationId: remove
      parameters:
        - name: id
          in: query
          description: auction id
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuctionResponse'
        '404':
          description: 'No exist'
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /auction/list:
    x-swagger-router-controller: auction
    post:
      description: List Auctions
      tags:
        - auction
      operationId: list
      parameters:
        - name: page
          in: query
          description: page
          required: true
          type: number
        - name: count
          in: query
          description: page size
          required: true
          type: number
        - name: order
          in: query
          description: order
          required: true
          type: string
        - name: sort
          in: query
          description: order by
          required: true
          type: string
        - name: body
          in: body
          required: false
          schema:
            properties:
              filter:
                type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuctionsResponse'
  /auction/getBestDealership:
    x-swagger-router-controller: auction
    get:
      description: Get Best Dealership
      tags:
        - auction
      operationId: getBestDealership
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
  /swagger:
    x-swagger-pipe: swagger_raw
  /market/getMarketData:
    x-swagger-router-controller: market
    get:
      description: Get Market Data
      tags:
        - market
      operationId: getMarketData
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
  /market/getMakeData:
    x-swagger-router-controller: market
    get:
      description: Get Make Data
      tags:
        - market
      operationId: getMakeData
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
  /market/getModelData:
    x-swagger-router-controller: market
    get:
      description: Get Model Data
      tags:
        - market
      operationId: getModelData
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
  /market/getDealershipData:
    x-swagger-router-controller: market
    get:
      description: Get Dealership Data
      tags:
        - market
      operationId: getDealershipData
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
  /market/getSalesData:
    x-swagger-router-controller: market
    get:
      description: Get Sales Data
      tags:
        - market
      operationId: getSalesData
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
  /market/getLeadsData:
    x-swagger-router-controller: market
    get:
      description: Get Leads Data
      tags:
        - market
      operationId: getLeadsData
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
  /market/getViewsData:
    x-swagger-router-controller: market
    get:
      description: Get Views Data
      tags:
        - market
      operationId: getViewsData
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
  /market/getRevenueData:
    x-swagger-router-controller: market
    get:
      description: Get Revenue Data
      tags:
        - market
      operationId: getRevenueData
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
  /market/getInventoryData:
    x-swagger-router-controller: market
    get:
      description: Get Inventory Data
      tags:
        - market
      operationId: getInventoryData
      security:
        - Bearer: []
      responses:
        '200':
          description: Success
# complex objects have schema definitions
definitions:
  UserResponse:
    type: object
    properties:
      _id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      password:
        type: string
      roles:
        type: array
        items:
          type: string
      date_created:
        type: string
      is_deleted:
        type: boolean
  UsersResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            type: string
        date_created:
          type: string
        is_deleted:
          type: boolean
  ForecastingResponse:
    type: object
    properties:
      _id:
        type: string
      make:
        type: string
      model:
        type: string
      year:
        type: number
      trim:
        type: string
      demand_category:
        type: string
      mileage_category:
        type: string
  ForecastingsResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        make:
          type: string
        model:
          type: string
        year:
          type: number
        trim:
          type: string
        demand_category:
          type: string
        mileage_category:
          type: string
  InventoryResponse:
    type: object
    properties:
      _id:
        type: string
      lot_id:
        type: string
      make:
        type: string
      model:
        type: string
      year:
        type: number
      color:
        type: string
      trim:
        type: string
      miles:
        type: string
      condition:
        type: string
      picture:
        type: string
      description:
        type: string
      price:
        type: number
      date_created:
        type: string
  InventoriesResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        lot_id:
          type: string
        make:
          type: string
        model:
          type: string
        year:
          type: number
        color:
          type: string
        trim:
          type: string
        miles:
          type: string
        condition:
          type: string
        picture:
          type: string
        description:
          type: string
        price:
          type: number
        date_created:
          type: string
  LotResponse:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      address1:
        type: string
      address2:
        type: string
      city:
        type: string
      state:
        type: string
      postal_code:
        type: string
      country:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      date_created:
        type: string
  LotsResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        date_created:
          type: string
  TransactionResponse:
    type: object
    properties:
      _id:
        type: string
      inventory_id:
        type: string
      price:
        type: number
      date_sold:
        type: string
      date_created:
        type: string
  TransactionsResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        inventory_id:
          type: string
        price:
          type: number
        date_sold:
          type: string
        date_created:
          type: string
  UnloadResponse:
    type: object
    properties:
      _id:
        type: string
      inventory_id:
        type: string
      est_losss_today:
        type: number
      date_created:
        type: string
  UnloadsResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        inventory_id:
          type: string
        est_losss_today:
          type: number
        date_created:
          type: string
  ForecastingProjectionResponse:
    type: object
    properties:
      _id:
        type: string
      forecasting_id:
        type: string
      date:
        type: string
      est_no_solds:
        type: number
      est_avg_sell_price:
        type: number
      est_avg_cost_price:
        type: number
      date_created:
        type: string
  ForecastingProjectionsResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        forecasting_id:
          type: string
        date:
          type: string
        est_no_solds:
          type: number
        est_avg_sell_price:
          type: number
        est_avg_cost_price:
          type: number
        date_created:
          type: string
  MoveResponse:
    type: object
    properties:
      _id:
        type: string
      inventory_id:
        type: string
      lot_from_id:
        type: string
      lot_to_id:
        type: string
      lot_to_est_price:
        type: number
      date_created:
        type: string
  MovesResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        inventory_id:
          type: string
        lot_from_id:
          type: string
        lot_to_id:
          type: string
        lot_to_est_price:
          type: number
        date_created:
          type: string
  SoldProjectionResponse:
    type: object
    properties:
      _id:
        type: string
      inventory_id:
        type: string
      lot_id:
        type: string
      estimated_sell_date:
        type: string
      date_created:
        type: string
  SoldProjectionsResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        inventory_id:
          type: string
        lot_id:
          type: string
        estimated_sell_date:
          type: string
        date_created:
          type: string
  ValueProjectionResponse:
    type: object
    properties:
      _id:
        type: string
      inventory_id:
        type: string
      lot_id:
        type: string
      date:
        type: string
      estimate:
        type: string
      error:
        type: string
      version:
        type: string
      date_created:
        type: string
  ValueProjectionsResponse:
    type: array
    items:
      type: object
      properties:
        _id:
          type: string
        inventory_id:
          type: string
        lot_id:
          type: string
        date:
          type: string
        estimate:
          type: string
        error:
          type: string
        version:
          type: string
        date_created:
          type: string
  AuctionResponse:
    type: object
    properties:
      _id:
        type: string
      saleInformation:
        type: object
      vehicleInformation:
        type: object
      predictionInformation:
        type: object
  AuctionsResponse:
    type: object
    properties:
      page:
        type: number
      count:
        type: number
      items:
        type: array
        items:
          type: object
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string
#TAGS
tags:
  - name: user
  - name: forecasting
  - name: inventory
  - name: lot
  - name: transaction
  - name: unload
  - name: forecasting projection
  - name: move
  - name: sold projection
  - name: value projection
  - name: auction
